// Extra config required by Android Annotations
configurations
{
    apt
}

dependencies
{
    // Extra config required by Android Annotations
    apt "org.androidannotations:androidannotations:${androidAnnotationsVersion}"
    compile "org.androidannotations:androidannotations-api:${androidAnnotationsVersion}"
}

def getSourceSetName(variant) {
    return new File(variant.dirName).getName();
}

// AA processing
android.applicationVariants.all {
    variant ->
        aptOutput = file("${project.buildDir}/source/apt_generated/${variant.dirName}")
        println "****************************"
        println "variant: ${variant.name}"
        println "manifest:  ${variant.processResources.manifestFile}"
        println "aptOutput:  ${aptOutput}"
        println "****************************"

        variant.javaCompile.doFirst {
            println "*** compile doFirst ${variant.name}"
            aptOutput.mkdirs()
            variant.javaCompile.options.compilerArgs += [
                    '-processorpath', configurations.apt.getAsPath(),
                    '-AandroidManifestFile=' + variant.processResources.manifestFile,
                    '-s', aptOutput
            ]
        }

// setup AA generated files as source in Android Studio
        android.sourceSets[getSourceSetName(variant)].java.srcDirs += aptOutput.getPath()

// filter the source files so we don't include stuff twice
        variant.javaCompile.source = variant.javaCompile.source.filter { p ->
            return !p.getPath().startsWith(aptOutput.getPath())
        }
}